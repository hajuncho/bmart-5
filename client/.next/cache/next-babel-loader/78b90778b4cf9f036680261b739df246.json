{"ast":null,"code":"var _jsxFileName = \"/Users/woowahan2/Desktop/bmart-5/next-typescript-boilerplate/src/components/modules/Header/Header.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport * as S from './styled';\nimport Icon from '@components/atoms/Icon';\nimport Logo from '@components/atoms/Logo';\nimport { HeaderMainType } from '@utils/constants';\n\nconst onClick = () => {\n  console.log('hello world');\n};\n\nexport const Header = ({\n  left,\n  main,\n  right\n}) => {\n  return __jsx(S.Header, {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, left && __jsx(\"div\", {\n    className: \"left-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    icon: left,\n    size: 1.1,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  })), main && __jsx(\"div\", {\n    className: \"main-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, main.type === HeaderMainType.LOGO ? __jsx(Logo, {\n    alt: \"logo\",\n    src: \"logo\",\n    size: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }) : main.type === HeaderMainType.SEARCH_BAR ? `--검색 인풋 구현--` : `${main.content}`), right && __jsx(\"div\", {\n    className: \"right-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, right.map(iconType => __jsx(Icon, {\n    icon: iconType,\n    size: 1.1,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/woowahan2/Desktop/bmart-5/next-typescript-boilerplate/src/components/modules/Header/Header.tsx"],"names":["React","S","Icon","Logo","HeaderMainType","onClick","console","log","Header","left","main","right","type","LOGO","SEARCH_BAR","content","map","iconType"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAaA,MAAMC,OAAO,GAAG,MAAM;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,CAFD;;AAIA,OAAO,MAAMC,MAAuB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAA2B;AAChE,SACE,MAAC,CAAD,CAAG,MAAH;AAAU,IAAA,SAAS,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,IACH;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,IAAI,EAAE,GAAxB;AAA6B,IAAA,OAAO,EAAEJ,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,EAMGK,IAAI,IACH;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACE,IAAL,KAAcR,cAAc,CAACS,IAA7B,GACC,MAAC,IAAD;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,GAAG,EAAC,MAArB;AAA4B,IAAA,IAAI,EAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAEGH,IAAI,CAACE,IAAL,KAAcR,cAAc,CAACU,UAA7B,GACD,cADC,GAGD,GAAEJ,IAAI,CAACK,OAAQ,EANpB,CAPJ,EAiBGJ,KAAK,IACJ;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACK,GAAN,CAAWC,QAAD,IACT,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,QAAZ;AAAsB,IAAA,IAAI,EAAE,GAA5B;AAAiC,IAAA,OAAO,EAAEZ,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAlBJ,CADF;AA2BD,CA5BM","sourcesContent":["import React from 'react';\nimport * as S from './styled';\nimport Icon from '@components/atoms/Icon';\nimport Logo from '@components/atoms/Logo';\nimport { HeaderMainType } from '@utils/constants';\n\ntype MainType = {\n  type: string;\n  content?: string;\n};\n\ntype Props = {\n  left?: string;\n  main?: MainType;\n  right?: Array<string>;\n};\n\nconst onClick = () => {\n  console.log('hello world');\n};\n\nexport const Header: React.FC<Props> = ({ left, main, right }) => {\n  return (\n    <S.Header className=\"header\">\n      {left && (\n        <div className=\"left-wrap\">\n          <Icon icon={left} size={1.1} onClick={onClick} />\n        </div>\n      )}\n      {main && (\n        <div className=\"main-wrap\">\n          {main.type === HeaderMainType.LOGO ? (\n            <Logo alt=\"logo\" src=\"logo\" size={4} />\n          ) : main.type === HeaderMainType.SEARCH_BAR ? (\n            `--검색 인풋 구현--`\n          ) : (\n            `${main.content}`\n          )}\n        </div>\n      )}\n      {right && (\n        <div className=\"right-wrap\">\n          {right.map((iconType) => (\n            <Icon icon={iconType} size={1.1} onClick={onClick} />\n          ))}\n        </div>\n      )}\n    </S.Header>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}